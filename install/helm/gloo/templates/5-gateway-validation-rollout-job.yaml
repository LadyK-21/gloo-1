{{- $customResourceLifecycle := include "gloo.customResourceLifecycle" .Values }}
{{- if $customResourceLifecycle }}
{{- $image := .Values.gateway.rolloutJob.image }}
{{- if .Values.global }}
{{- $image = merge .Values.gateway.rolloutJob.image .Values.global.image }}
{{- end }}
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: gloo
    gloo: validation-service-rollout
  name: gloo-validation-service-rollout
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5" # run this job after the role/rolebinding is created
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed,before-hook-creation
spec:
  template:
    metadata:
      labels:
        gloo: validation-service-rollout
    spec:
      {{- include "gloo.pullSecret" $image | nindent 6 -}}
      serviceAccountName: gloo-validation-service-rollout
      containers:
        - name: kubectl
          image: {{template "gloo.image" $image}}
          imagePullPolicy: {{ $image.pullPolicy }}
          securityContext:
            runAsNonRoot: true
            {{- if not .Values.gateway.rolloutJob.floatingUserId }}
            runAsUser: {{ printf "%.0f" (float64 .Values.gateway.rolloutJob.runAsUser) -}}
            {{- end }}
          command:
          - /bin/sh
          - -c
          - |
            kubectl rollout status deployment -n {{ .Release.Namespace }} gloo
            kubectl apply -f - <<EOF{{- include "gloo.customResources" . | indent 12}}EOF
      restartPolicy: Never
  ttlSecondsAfterFinished: 0
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0" # must be created before rollout job
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed,before-hook-creation
  name: gloo-validation-service-rollout
  namespace: {{ .Release.Namespace }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-validation-service-rollout
  namespace: {{ .Release.Namespace }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0" # must be created before rollout job
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed,before-hook-creation
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["gateway.solo.io"]
  resources: ["*"]
  verbs: ["get", "create", "update", "patch"]
- apiGroups: ["gloo.solo.io"]
  resources: ["*"]
  verbs: ["get", "create", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-validation-service-rollout
  namespace: {{ .Release.Namespace }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0" # must be created before rollout job
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed,before-hook-creation
roleRef:
  kind: Role
  name: gloo-validation-service-rollout
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: gloo-validation-service-rollout
  namespace: {{ .Release.Namespace }}
{{- end }} {{/* if $customResourceLifecycle */}}
